{
	"10": {
		"preview": "4월 백엔드 개발 리뷰",
		"logo": "https://static.codenary.co.kr/company-logo/573.png",
		"info": "킵그로우 개발 챕터 Brown 입니다.4월의 백엔드 개발 리뷰에서는 잘못 설계해서 힘들었던 경험을 공유하고 기능 개발 전, 설계 시 고려 사항에 대해 논의하였고 TDD 방법론과 관련한 세부 주제들을 바탕으로 리뷰를 진행하였습니다.잘못 설계해서 힘들었던 경험 공유설계가 끝난 후(위) / 설계를 하는 중(아래)잘못된 설계로 힘들었던 경우에 대하여 다양한 경험들을 공유하였습니다.개발해야하는 기능을 서로 다르게 이해하고 설계를 하게된 경우기능을 개발하게 된 의도를 제대로 파악하지 못한 경우특정 도메인에 대한 이해나, 문서 등에 대한 서치가 부족한 채 설계한 경우잘못된 설계로 기능 개발 자체의 난이도가 높아지는 경우다른 기능의 설계를 차용 하였으나, 현재 도메인에는 맞지 않는 경우기능 개발 전, 설계 시 고려 사항에 대한 공유앞서 잘못된 설계로 힘들었던 들을 바탕으로 설계 시 고려 사항에 대한 내용을 논의하였습니다.보통 잘못 설계한 경우, 개발 자체가 어려워지고 이를 본인도 알고 있다. 개발 일정에 맞추려, 수정 없이 두게되면 결국 레거시 코드가 되기 때문에 개발 자체가 쉽게 풀리지 않는 경우, 빠르게 다른 사람에게 도움을 받거나 다시 설계한다.단순한 기능 추가가 아닌 다른 방법이 있는지에 대해서 고민한다. 이전에 만들어진 기능을 활용할 수 있는지 확인하고 비개발적인 방향으로도 이를 해결할 수 있는지에 대해 고민한다.도메인에 대한 지식과 기술에 대한 이해를 가지고 설계를 시작한다. 얕은 지식과 잘못된 이해를 바탕으로 만들어진 설계는 구현 단계에서 불가능한 부분이 있음을 깨닫게 된다.해당 기능이 왜 만들어지게 되었는지, 의도에 대해 파악 해야한다.기능이 확장될 수 있다는 생각을 가지고 설계한다. 절대 라는 것은 없기 때문에 예상 할 수 있는 추가 기능들도 설계 시 같이 고려한다.TDD 방법론에 대한 논의실무에서 TDD를 얼마만큼 활용하고 있는지, TDD의 장단점은 무엇인지, TDD는 필수 인지 등, 각 개발자 분들이 생각하시고 적용하고 계신 TDD에 대해 자유롭게 이야기를 나누었습니다.통합 테스트가 성공하는 경우Matthew께서 정리해주신 TDD를 사용하는 이유, TDD의 장단점에 대한 내용은 아래와 같습니다.아래 내용을 바탕으로 TDD가 가지는 장점과 이를 개발 일정에 맞춰 활용하기 위한 숙련도가 필요함에 대해 이야기를 나누었고, 적용하는 범위와 어떤 식으로 구현하는지에 대해 공유하였습니다.TDD를 사용하는 이유일반적인 개발방식일반적인 개발방식에서 버그가 발생한다면 원인을 찾기 위해 디버깅과 많은 코드를 탐색해야 한다. 최악의 경우 개발한 시간보다 버그를 찾는 시간이 길어지거나 설계를 뒤집어야 하는 상황이 발생할 수 있다.TDD 개발방식TDD 개발방식이 일반적인 개발 방식과 다른 점은 MVP(Minimum Viable Product) 단위로 테스트가 성공할 때마다 점진적으로 기능을 확장해 나감과 동시에 신뢰성을 높이는 방식이다.TDD의 장점개발자에게 잘 동작하는 기능을 수정하는 것은 심리적 불안감을 주기 때문에 꺼려지는 작업이다. 하지만 기능의",
		"date": "5/2/2023"
	}
}