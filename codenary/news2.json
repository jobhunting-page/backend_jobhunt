{
	"1": {
		"preview": "이슈 트래커 Yona with Ncloud (네이버랩스 채수원 님 인터뷰)",
		"logo": "https://static.codenary.co.kr/company-logo/31370.png",
		"info": "안녕하세요, 네이버클라우드 팀입니다.​여러분, 업무 진행 상황 어떻게 체크 하시나요? To-do 리스트, 협업툴 등 업무 종류와 협업 환경에 따라 다양한 방법을 사용하실텐데요.​협업툴도 소통, 프로젝트 관리, 공동 문서관리 등 핵심 기능에 따라 종류가 나뉩니다. 네이버웍스 (NAVER WORKS), MS 팀즈 (MS Teams), 구글 워크스페이스 (Google Workspace), 슬랙 (Slack), 줌 (Zoom), 먼데이닷컴 (monday.com) 등의 협업툴을 떠올려 보시면 차이점을 쉽게 이해할 수 있죠.​그 중 업무 (Task)의 생성부터 완결까지 진행 상황을 케이스 (Case) 단위로 관리하는 도구를 ‘이슈 트래커’라고 합니다. 개발 부서 내부에서 사용하는 경우가 많고, 다른 부서와의 협업 상황에서도 유용하게 쓰이는데요. 대표 서비스로는 GitHub, Jira 등이 있고, 국내에서는 Yona가 꼽힙니다.​국내 대표 이슈 트래커 Yona가 네이버 클라우드 플랫폼 (Ncloud)의 인프라 서비스 위에서 운영되고 있는데요. Yona 운영을 담당하는 네이버랩스 채수원 님을 만나 Ncloud 활용기를 자세히 들어봤습니다.​Yona with Ncloud네이버 클라우드 플랫폼 사용자 인터뷰With NAVER LABS 채수원 님​Q. 안녕하세요 수원님! 자기소개 부탁드립니다.저는 NAVER LABS에서 ARC brain이라는 로봇 운영 SW 개발에 참여하고 있고, 이슈 트래커 협업 플랫폼 Yona의 개발과 운영을 진행하고 있습니다.​Q. 아직 Yona를 잘 모르실 분들을 위해 설명 부탁 드립니다.Yona는 Git 저장소 기능이 내장된 설치형 이슈 트래커에요. 개발자뿐만 아니라 기획자, 디자이너 등 함께 일하는 모든 사람의 한 곳의 플랫폼을 바라보며 프로젝트를 진행할 수 있게 만든 협업 플랫폼입니다. GitHub, JIRA 등 여러 개발 도구들이 존재하지만, 대부분 기능이 개발자 위주로 짜여 있고 기획자, 디자이너 등의 다른 프로젝트 멤버들과 함께 사용하기엔 불편하거나 복잡한 부분들이 많았습니다. 좀 더 단순하고 직관적인 환경에서 개발자뿐 아닌 팀 멤버들이 전체가 함께 의견을 나눌 수 있는 협업 도구가 필요했습니다. 그래서 만들어진 도구가 Yona입니다.​2012년에 네이버 사내에서 시작된 프로젝트로 소스코드가 오픈 된 것이 그 시초였는데요. (github 링크). 2016년 사내 프로젝트 종료 후 소스코드가 개인 프로젝트로 포크 되어 Yona라는 이름 변경 후 제공되고 있습니다. 다운로드해서 사용할 수 있는 배포 서버와 데모 서버로 두 가지를 운영 중에요.21세기형 SW 개발 플랫폼 Yona — 메인 홈페이지Q. Yona는 누가 사용하나요?알려진 사용처로는 IKEA KOREA & JAPAN, 국립국악원, CJ E&M, 롯데쇼핑, 한국원자력안전기술원(KINS), 국가철도공단, LG에너지솔루션, 연세의료원, L포인트, 국립문화정보원, 이화여대 법학전문대학원 등이 있습니다. 최근 3개월 데이터를 보니 여러 정부기관, 공단, 증권사, 통신사 등에",
		"date": "5/2/2023"
	},
	"2": {
		"preview": "네이버클라우드 퇴근길 테크밋업  후기 (2023.04)",
		"logo": "https://static.codenary.co.kr/company-logo/31370.png",
		"info": "안녕하세요, 네이버클라우드 팀입니다!​4월 20일 네이버클라우드 강남 교육장 @Ncloud Space에서 열린<퇴근길 테크밋업 : IT 기업 비개발자 모임> 후기를 공유드립니다.위치: 네이버클라우드 Ncloud Space 서울특별시 강남구 테헤란로 133 11층, 12층네이버클라우드는 클라우드 기술 경험 공유와, 교류를 장려하기 위해 매 짝수 월마다 퇴근길 테크밋업을 열고 있습니다. 지금까진 개발자, 엔지니어 분들을 모시고 deep 한 기술 이야기를 나눴다면, 이번 달은 조금은 가벼운 주제로 비개발자 (비전공자) 분들을 초대해서 클라우드와 AI에 대해 배우는 시간을 가졌어요.​▼비개발자 모임을 열게 된 이유 (밋업 공지)https://blog.naver.com/n_cloudplatform/223053925951▼지난 테크밋업 기록챗봇 개발자 모임 (2023.02)AI & Data 모임 (2022.12)Blockchain 모임 (2022.10)Ncloud 개발자 모임 (2022.08)Ncloud 엔지니어 모임 (2022.06)​이번엔 어떤 내용을 다뤘고 무엇을 배웠는지.호스트 눈으로 바라본 테크밋업 회고 시작합니다!폭.풍.마.감이번 테크밋업은 최초로! 하루가 다 지나기도 전에, 3시간 컷으로 참가 신청이 마감됐습니다. 그동안 얼마나 많은 비개발자 분들이 테크밋업을 기다리셨을지. 진즉에 기획할 걸 그랬어요.​그리고 ‘네이버클라우드가 왜 이런 밋업을 주최하며, 무엇을 얻는 건가?’ 궁금해하시는 분도 많았는데요.여기에 대한 답은 크게 세 가지입니다.​1) 기술 트렌드 이해2) 배움에 대한 갈증 해소3) 비슷한 관심사를 가진 사람들과의 교류 장려​클라우드 서비스 제공사 (CSP)로서 양질의 서비스를 제공하는 것도 중요하지만, 우리의 지식을 나누고 교류가 일어나도록 좋은 판을 깔아드리는 것도 진정한 기술 리더가 되기 위해 응당해야 할 역할이라 생각하거든요. (오…? 좋아,,, 그럴싸했어!!)​함께한 분들라이너, 구름(goorm), KCC정보통신, 메쉬코리아, UXDBEA, 휴맥스홀딩스, 카카오, 카카오뱅크, 카카오엔터프라이즈, NHN, 써드아이시스템, 콘센트릭스서비스코리아, GS ITM, 솔리드이엔지, 메가존클라우드, 스마일게이트홀딩스. 그리고 네이버클라우드, 네이버 커넥트재단 비개발자 현업 담당자분들과 함께 했습니다.​​※ [잠깐!] 이어지는 내용은 개인의 주관적 생각과 의견으로, 특정 기업의 입장을 대변하지 않습니다.​​배운 것클라우드와 AI 전문가에게 배우는 ‘Session’, 참가자의 경험과 생각을 나누는 ‘Share’. 두 파트로 나누어 각각 한 시간씩 진행했습니다.​Session 발표는 네이버클라우드 Cloud Tech Frontier (교육) 정여진 님, AI 컨설턴트 가명현 님이 수고해 주셨어요. (여진님, 명현님. 다시 한번 감사해요!)​​‘클라우드 개념, 30분으로 끝내기’ 주제로 시작된 여진 님의 발표. 여진님은 올해 초 네이버클라우드로 입사하셨는데, 최소 3년 이상은 일하신 것처럼 어려울 수 있는 내용을 쉽게 쉽게 설명해 주셨",
		"date": "5/2/2023"
	},
	"3": {
		"preview": "Kubernetes 환경에서 Segmentation Fault 트러블슈팅하기 (Feat. Fluent Bit Contribution)",
		"logo": "https://static.codenary.co.kr/company-logo/136.png",
		"info": "안녕하세요. DevOps 팀 Cloud Platform Unit의 Yop입니다. 최근 하이퍼커넥트 Kubernetes 클러스터에서 로그 수집용 agent로 사용 중인 Fluent Bit의 버전을 올리다가 segmentation fault를 맞닥뜨렸는데요. 이 글에서는 어떻게 segmentation fault를 디버깅하여 문제점을 분석하고 Fluent Bit에 PR을 merge 하였는지 그 과정을 소개해 드리고자 합니다. 이 글에서 다룰 주제는 다음과 같습니다.Fluent Bit에 대한 간단한 소개Fluent Bit의 버전을 올리고 모니터링하기core 파일 확보하기gdb 환경 셋업하기core 분석하기PR 제출하기결론Fluent Bit 란?Fluent Bit (https://fluentbit.io/) 는 Fluent 생태계의 로그 프로세싱 및 포워딩 프로그램입니다. Fluentd에 비하여 메모리 사용량이 적고 의존성이 적어 가볍다는 장점이 있습니다. 하이퍼커넥트에서는 ElasticSearch, Kibana와 함께 EFK 스택을 구성하여 사용하고 있는데요. 최근 Fluent Bit 2.0이 릴리즈되어 버전을 올렸습니다.Fluent Bit의 버전을 올리고 모니터링하기하이퍼커넥트에서는 주로 Fluent Bit를 DaemonSet으로 띄워 사용하지만, 출력 로그 양이 특별히 많은 애플리케이션들에 대해서는 Pod의 sidecar로 붙여서 사용하고 있습니다. 그래서 유저 임팩트가 적은 서비스를 선택해 Fluent Bit sidecar를 업그레이드 하였습니다. 그러고나서 며칠간 모니터링을 진행하였는데, “Kafka output plugin을 사용하는 컨테이너”만 SIGSEGV로 인해 재시작되고 있었습니다!당시에 함께 찍혔던 스택트레이스를 통해 에서 크래시가 발생했음을 알 수 있었습니다. 이런 일이 일어난 정확한 원인을 위해서는 core 파일을 분석해야 합니다. 하지만 Fluent Bit가 Kubernetes 환경에서 돌고 있던 탓에, core 파일이 남지 않았습니다.core 파일 확보하기Pod에 PersistentVolume 추가하기Core 파일을 확보하기 위해, 해당 Pod에 PersistentVolume을 붙여주기로 합니다. EBS 같은 것을 붙여줘도 되지만, 간단히 hostPath Volume을 붙였습니다.커널 파라미터 core_pattern 변경하기Core 파일이 떨어지는 경로를 변경하려면 Fluent Bit sidecar Pod이 돌고 있는 node에 접속하여 core_pattern 이라는 커널 파라미터를 변경해주어야 합니다.$ echo \"/tmp/cores/core.%e.%p.%h.%t\" > /proc/sys/kernel/core_pattern이렇게 하면 프로세스가 SIGSEGV를 받고 종료될 때 /tmp/cores 에 프로세스 이름, pid, hostname, 타임스탬프 등의 정보와 함께 core를 남기게 됩니다.테스트해보기정말 위 설정이 잘 적용되었을까요? 간단한 방법으로 테스트해볼 수 있습니다.실험하고자 하는 Pod에 exec로 쉘을 띄",
		"date": "5/2/2023"
	},
	"4": {
		"preview": "DEVOCEAN 메타분석 - 1. 데이터 탐색",
		"logo": "https://static.codenary.co.kr/company-logo/375.png",
		"info": "DEVOCEAN 메타분석 - 1. 데이터 탐색Dev + Ocean = Devocean!“코드를 거래하는 플랫폼과 비즈니스가 있나요?”2017년 여름. 데이터 분석에 입문하는 첫 수업에서 제가 교수님께 드린 질문입니다.파이썬으로 할 수 있는 것들에 대해 듣던 도중으로 기억하는데, 아는 파이썬이라고는 스타크래프트1의 맵 밖에는 없었던 제게는,코드를 몇 번 타이핑 하는 것으로 놀라운 결과물들이 나오는 모습이 마냥 신기해 보였던 것이겠지요.마법의 재료가 되는 코드들을 사고 파는 곳을 상상했던 것 같습니다. 교수님의 답변이 기억나지는 않지만, 개방과 공유가 tech 업계의 성과를 만들어 냈음을 이제는 이해하고 있습니다.google i/o, re:invent(AWS), SK Tech Summit배우고, 알아낸 것들을 공유하는 이유는 천차만별입니다. 이제 막 공부를 시작하여 작심삼일에 그치지 않기 위해 기록을 시작하는 분도 있고,취업 및 진학을 위한 포트폴리오를 작성하거나, 개인적 성장을 위한 개발 블로그/유튜브 등도 요즘엔 쉽게 찾아볼 수 있습니다.위와 같은 모습은 개인에게만 국한된 것은 아닙니다. IT 기업들도 공유에 적극적이고, 해외뿐 아니라 국내의 기업들도 Tech 블로그를 관리하며 Tech 컨퍼런스를 개최하는 것이 일반적인 모습이 되었습니다.‘인류의 발전에 기여하고, 타인에 도움이 되고자…’(Committed to significantly imporving the lives of as many people as people - Google Founders Letter, 2004) 라는 이유도 있겠으나너무도 낭만적인 이야기이고, 자사의 상품/서비스를 알리고 커뮤니티/생태계를 확장하기 위함이 주된 목적이겠지요.그렇게 만들어진 선순환의 사이클의 강력함을 모두가 경험하고 있으니까요.“어떤 기술이 망하지 않는 가장 확실한 방법은, 그 기술이 널리 쓰여버리는 일입니다. 디지털 전환기의 고객 기업들은 늘 새로운 기술에 갈증을 느낍니다. 디지털 기술이 결정적인 차별화를 만들어내는 주체가 되어가고 있음을 이제는 깨닫게 되어서지요. 고객이 만족할 수밖에 없는 체험을 정확하고 신속히 만들어 내기 위해 디지털 기술이 활용되면서, 이 마법을 실현해 내는 주인공(개발자)에도 관심이 갈 수밖에 없습니다. 그들이 우리 기술을 쓰도록 하고, 또 우리 안에도 그러한 주인공들을 늘리는 일이 중요해집니다.”[김국현의 트렌드툰] 009-DR(Developer Relations)그리고 이 곳, 데보션(DEVOCEAN)도 마찬가지로 Tech 공유의 공간들 중에 하나입니다.데보션에는 SK그룹의 Tech 관련 구성원들의(데보션 마스터) 글들이 실립니다.스터디 관련 글, 데보션 Young 분들의 글을 포함해 대부분의 글들은 각 분야에 대한 생각/고민들을 담고 있습니다.데보션 마스터 분들의 글에는 관련 분야의 전문가답게 컨텐츠의 퀄리티가 높은데, 문득 궁금해졌습니다.’언제, 어떤 글들이 업로드 되었는지 ’, ‘데보션에는 어떤 주제의 글들이 주로 업로드 되었을까?’, ’주제에는 당시의 화제",
		"date": "5/2/2023"
	},
	"5": {
		"preview": "뷰티컬리에서 <나의 컬리 스타일>이 갖는 의미",
		"logo": "https://static.codenary.co.kr/company-logo/426.png",
		"info": "뷰티컬리에서 <나의 컬리 스타일>이 갖는 의미뉴비가 뉴서비스를 만났을 때안녕하세요. 프로덕트 디자인팀 디자이너 최윤미입니다. 😃프로덕트 디자인팀(이하 프디팀)은 컬리의 모든 디지털 영역에서 사용자와의 상호작용에 대해 고민하고 사용자 경험을 디자인하고 있는데요. 오늘은 프디팀의 <나의 컬리 스타일> 작업에 대해 이야기해 보려고 합니다!뷰티컬리에서 <나의 컬리 스타일>은 어떤 의미를 가지고 있을까요?식품은 가구 당 소비가 많은 반면, 뷰티상품은 개인의 취향과 필요에 의한 구매가 대부분입니다. 그렇기 때문에 개인이 가진 피부 특성, 선호도에 따라 사용하는 뷰티제품에는 큰 차이가 있고 더 나은 쇼핑 정보를 제공해 드리기 위해서는 우리가 사용자를 더 잘 아는 것이 매우 중요합니다.© 2023. Kurly. All rights reserved.컬리는 식품을 넘어 뷰티컬리까지 버티컬 사업을 확장했고, 나아가 더 다양한 제품들을 고객 취향에 맞추어 제공하고자 합니다. <나의 컬리 스타일>은 컬리가 사용자를 좀더 알아가기 위한 초석 다지기로 볼 수 있겠습니다.화면 구조 설계: 사용자에게 프로필 입력 화면은 어떤 것이 좋을까?<나의 컬리 스타일> 진입 화면의 경우 위 영상처럼 첫 진입과 재 진입이 다릅니다.처음의 설계 방향은 운영 효율성을 고려해 한 화면에 프로필 입력항목을 모두 노출하는 것이었습니다. 하지만 <나의 컬리 스타일>은 우리가 새롭게 선보이는 기능이며, 뷰티컬리 오픈과 함께 제공될 서비스였기 때문에 사용자 관점에서 좀 더 깊은 고민을 해야 했습니다.인사이트를 얻기 위해, 많은 레퍼런스와 유사 서비스들을 찾아보며 개인화 서비스의 트렌드와 특징들을 분석해 보았습니다. 화면들을 분류해보니, 프로필 입력 화면은 크게 두 가지 - 한 번에 항목들이 노출되는 목록형과 프로세스로 진행되는 단계형 - 으로 구성되어 있는 것을 알 수 있었습니다.© 2023. Kurly. All rights reserved.이 둘을 사용성 측면에서 비교해 보았고, 위의 표처럼 장/단점을 명확하게 구분할 수 있었는데요.목록형 구조에선사용자가 한 화면에서 항목들을 가볍게 확인할 수 있는 한편확인하고 판단해야 할 범위가 넓어져 시간이 상대적으로 오래 걸린다는 단점이 있었고단계형 구조에선사용자가 하나의 대상에 집중할 수 있는 반면화면이 페이징 되면서 입력 중 중도 이탈할 수 있다는 문제가 있었습니다.© 2023. Kurly. All rights reserved.저는 첫 진입 회원에겐 질문 하나에 집중할 수 있는 환경과, 넓은 화면을 활용해 친절한 설명을 함께 제공하는 단계형 구조가 더 맞는 방향이라고 생각했고, 기입력 회원의 재방문 시에는 질문들을 한눈에 보여주는 목록형 구조가 더 좋은 사용성이라고 생각했습니다.© 2023. Kurly. All rights reserved.검증을 위해 각각의 프로토타입을 제작하여 팀원들의 동의를 얻었고, 메이커 분들 역시 이 인사이트에 공감을 해주셨습니다. 단계형 구조에서 ProgressBar UI에 리워드 프로모션을 사용하면 중도 이탈 방지에 도움",
		"date": "5/2/2023"
	},
	"6": {
		"preview": "사소한 영역이라도 개선이 필요해요",
		"logo": "https://static.codenary.co.kr/company-logo/137.png",
		"info": "글. 최지윤(Yun) / UX Designer안녕하세요. 여기어때 UX Designer 최지윤(Yun)입니다. 저는 FST팀(다양한 직군이 모여 특정 KPI 달성을 위해 함께 달리는 조직)에서 여기어때 GMV를 향상하는 프로젝트를 담당하고 있어요. 이번 글에서는 숙소 상세 페이지 쿠폰 UX 실험 여정을 소개해드리려 해요.쿠폰 받기, 뭐가 문제일까?FST팀 실험 백로그에 남아있던 문제점 중 쿠폰 받기 UI 개선에 대한 내용이 있었어요. 처음엔 쿠폰 받기가 정말 개선이 필요할 만큼 큰 문제일까 싶었어요.마침 UX 팀원이자 여기어때 사용자인 릴리가 상품을 구매할 때 혼란스러웠던 경험담을 이야기해 줬어요. 마음에 든 상품을 구매하려고 결제 단계로 넘어갔는데, 상세 페이지에서 본 상품 가격과 결제 금액이 달랐다는 거였어요. 뭐가 문제인지 싶어 다시 상세페이지로 돌아갔는데 아까 본 가격과 다르지 않았던 거죠.하지만 결제 금액은 여전히 더 높았고요. 알고 보니 상세 페이지에서 노출된 가격은 할인 쿠폰을 적용했을 때의 가격이었어요. 사용자가 그 가격으로 구매하려면 상품 페이지에서 노출되고 있는 쿠폰을 다운로드하여야만 결제 단계에서 쿠폰 할인이 적용된 가격으로 구매할 수 있었죠.여기어때 앱에 익숙한 사용자도 쿠폰을 바로 인지하기 어려워 쿠폰 받는 경험이 불편한데, 라이트 사용자는 더 혼란스러울 수 있겠다 싶어 팀에 백로그에 있던 쿠폰 UX 개선을 진행하자는 제안을 드렸어요.문제점 해체하기대부분 사용자는 페이지 진입 시 상단영역에서 오래 머물지 않기 때문에 짧은 시간에 후킹 한 요소를 빠르게 전달할 수 있어야 해요. 그렇기 위해선 가격 혜택과 밀접한 쿠폰 받기 버튼의 경우 더욱 직관적으로 제공해야 하겠죠?실험하기 전 기존에 노출되고 있던 쿠폰 UI는 아래와 같았어요.상세페이지마다 다른 쿠폰 UI 형태하나, 직관적으로 인지하기 어려운 쿠폰 영역 상세 페이지마다 쿠폰 UI가 제각각이라 쿠폰 인지뿐만 아니라 찾기도 어려웠어요. 예를 들어, 프리미엄블랙의 쿠폰은 검은색, 그 외 상품은 파란색, 또 선착순 즉시 할인은 빨간색으로 디자인이 제각각이었죠. 이로 인해 사용자는 매번 새로운 형태의 쿠폰을 접해야 했어요.또한 쿠폰 UI 텍스트는 여기어때 잘난체 폰트를 사용하고 있어 자칫 마케팅 배너 영역으로 보일 수 있겠다는 생각이 들었어요. 실제로 마케팅 프로모션 영역에 잘난 체 폰트를 쓰고 있기도 하고요.타사 리서치를 해보니 쿠폰 영역은 누가 봐도 내려받기 버튼 형태임을 빠르게 인지할 수 있었고, CTA 버튼 문구는 구매 동기를 고취할 수 있도록 명확한 라이팅을 지향하고 있었어요. (ex. 00님이 받을 수 있는 최대 할인가, 최대 00%를 할인받을 수 있어요.)둘, 일관성 없는 사용 경험 페이지별로 다른 스타일의 버튼을 사용하고 있다는 문제점도 있었어요. 이는 사용자에게 일관된 UX 경험을 제공하지 못할 뿐만 아니라, 앱 사용성도 떨어뜨릴 수 있다고 생각해요. 여기어때는 디자인 시스템(이하 YDS)이 잘 구축되어 있어, 버튼에 쓰이는 폰트나 아이콘 스타일 등 사용자에",
		"date": "4/28/2023"
	},
	"7": {
		"preview": "여기어때가 브랜드 그래픽 자산을 활용하는 방법",
		"logo": "https://static.codenary.co.kr/company-logo/137.png",
		"info": "여기어때 x 맘스터치 팝업스토어 공간브랜딩서울 중심에 여기어때 공항점이 오픈했다는 사실, 알고 있나요? ✈️여기어때 공항점은 여기어때x맘스터치가 콜라보로 진행해 4월 한 달 동안 서울 강남구 맘스터치 가든 역삼점에 오픈한 팝업스토어에요!올해 코로나가 엔데믹으로 전환되면서 여러 브랜드들이 팝업스토어를 열고 있고, 팝업스토어는 하나의 문화로 자리 잡아가고 있는데요. 여기어때도 맘스터치와 협업으로 이 흐름에 올라타 브랜드 팝업 스토어를 진행하게 되었어요.이번 팝업 스토어는 여기어때의 해외 여행과 맘스터치의 신제품을 연결한 스토리로 여기어때의 디자인 자산을 활용해 오프라인 공간을 기획했답니다. 🥰여기어때에서 브랜드 비주얼을 활용해서 어떻게 ‘여기어때 공항점’이라는 이름을 구현해냈는지 알려드릴게요. 📢브랜드 그래픽을 활용해 팝업 매장의 윈도우 그래픽 시트를 적용한 모습여기어때 공항점 팝업스토어의 공간 컨셉은 ‘여기어때와 떠나는 세계 여행’으로, 여행을 떠나는 설렘과 함께 공항 라운지에서 맘스터치 신제품 싸이버거를 즐길 수 있는 스토리를 공간에 녹이고자 했어요.이 컨셉은 여기어때 해외 서비스와 브랜드 메시지를 동시에 보여주는 방향이기도 한데요. 여기어때 공항점에서는 하루 1명 해외 여행을 보내주는 이벤트를 함께 진행하여 떠나고 싶은 여행심을 즐거운 경험으로 연결했어요.소비자들로 하여금 여행의 설렘을 느낄 수 있는 공간으로 채우기 위해 여러 요소들로 감각적인 공간으로 연출하고자 했어요.먼저, 인테리어의 톤 앤 무드는 공항 컨셉을 보여줄 수 있는 스테인리스 소재와 브랜드 컬러인 레드, 화이트를 활용해 포인트를 줬어요.그리고 디자인 아웃풋은 여기어때 브랜드 비주얼을 활용한 그래픽과 굿즈로 구성했을 뿐만 아니라, 소비자가 직접 체험할 수 있는 경험 요소들을 곳곳에 활용해 공간에 머무르는 동안 좋은 경험을 할 수 있도록 했어요.그럼 여기어때 공항점을 자세히 살펴볼까요?여기어때 공항점 팝업스토어 매장의 공항 컨셉 인테리어외부 통유리와 내부 복도 벽면엔 해외여행을 연상시키는 랜드마크 그래픽 오브제들이 다양하게 배치되어 있어요. 내부로 들어가면 공항 느낌을 그대로 느낄 수 있는데요, 곳곳에 있는 오브제와 디자인들이 공항에서 볼 수 있는 분위기를 연출해 공간 컨셉을 확실하게 전달하는 것을 볼 수 있어요.공항 안내 사이니지와 행잉 전광판, 벤치, 그리고 다양한 소품들로 비행기 탑승 전 여행의 설렘의 향수를 자극하게 되죠.브랜드 그래픽이 적용된 키오스크와 다양한 포토카드포토존이 있어 방문 인증샷을 찍을 수 있고, 찍은 사진을 포토 키오스크에서 무료로 사진 인화를 받아 갈 수 있어요. 그리고 사진 인화 시 프레임 디자인은 7가지로 구성되어 있어 원하는 프레임을 선택해 인화할 수 있답니다.포토존과 키오스크의 디자인 역시 여기어때 그래픽 자산이 활용되어 있어서 자연스럽게 여기어때 브랜드 요소를 접할 수 있고, 공항 그래픽 요소들은 여행 욕구를 불러일으키기 충분해 보이네요.👏매장 내 비치돼있는 포토존과 다양한 굿즈매장에서 맘스터치 신메뉴를 주문하면 당장이라도 입국 수속을 해",
		"date": "4/28/2023"
	},
	"8": {
		"preview": "주문소요시간을 줄여보자",
		"logo": "https://static.codenary.co.kr/company-logo/30124.png",
		"info": "안녕하세요! 저는 주문팀에서 주문서, 선물하기 등 결제하기 화면을 담당하고 있는 기획자 김윤성입니다.오늘은 결제하기 화면의 기획자로서 제가 고민하고 있는 점들, 그리고 이를 해결하기 위해 해왔던 작업들을 공유드리려 합니다. 😎결제하기에서 가장 중요한 건 뭘까?여러분은 결제하기 화면에서 무엇을 가장 먼저 하시나요? 내가 실제로 결제해야 하는 금액이 뭔지 가장 빠르게 알고 싶을 수 있습니다. 그렇다면 가장 많이 할인되는 쿠폰이 뭔지 궁금할 거예요. 혹은 결제하는 금액은 상관없고, 일단 빠르게 결제하고 싶을 수 있습니다. 그럼 빠르게 결제하기 전에 내가 사는 상품이 뭔지, 내가 맞는 상품을 결제하고 있는 건지 한눈에 알고 싶을 수도 있고요. 결제 시 비밀번호를 입력하거나 본인인증을 하는 등의 절차를 전부 다 생략하고, 그냥 모르겠고 다 귀찮아 그냥 결제할래! 라고 생각할 수도 있어요. 전부 다 맞는 말입니다. 공통적으로는 모두 빠르게 특정 행동을 하고 싶어 한다는 점인데요!결제하기 화면에 들어오는 고객들은 어느 정도 구매 의사가 있는 상태로 들어옵니다. 그러므로 이 상품을 살 지, 저 상품을 살 지 고민하는 것보다 일단 내가 사기로 한 바로 이 상품을 빠르게 결제하고 싶어합니다. 🤔따라서 결제하기 화면의 주요한 목표 중 하나는 어떻게 하면 고객의 주문을 빠르게 완료시킬 수 있을지입니다. 이를 위해 저희 팀에서 트래킹하는 지표 중 하나가 주문소요시간인데요. 주문소요시간은 주문하기를 클릭한 이후, 실제로 결제가 완료되기까지의 시간입니다.주문소요시간 = 주문하기를 클릭한 이후, 실제로 결제가 완료되기까지의 시간비슷하지만 다른 각 서비스들의 결제하기 화면들주문소요시간에 영향을 끼치는 건 뭐가 있을까?고객이 주문하기를 클릭한 이후, 실제로 결제가 완료되기까지엔 많은 요소가 영향을 끼칠 수 있습니다. 이를 결제하기 화면 단에서(1) 제어할 수 없는 것과 (2) 제어할 수 있는 것으로 나눠볼 수 있는데요.먼저 결제하기 화면을 담당하고 있는 담당자 입장에서 제어할 수 없는 것들이 있습니다. 예컨대 설날이나 추석과 같은 명절에는 여러 배송지에 한 번에 주문을 많이 하기 때문에, 어쩔 수 없이 고객이 결제하기 화면에서 확인해야 하는 정보가 많습니다. 내가 배송지는 전부 다 잘 입력했나? 받는 사람의 전화번호를 틀리게 입력한 건 아니겠지? 나 정말 이 사람한테 이걸 보내고 싶나? 등.. 배송지가 많으면 많을수록 주문소요시간은 늘어날 수밖에 없습니다. 😢또한, 신세계그룹의 쓱데이와 같이 세일을 크게 하는 시즌에도 주문소요시간은 늘어날 수 있습니다. 보통 세일을 크게 하는 시즌에는 기존에 SSG를 사용하지 않던 신규 고객, 혹은 오랜만에 SSG를 방문한 휴면고객이 많이 유입됩니다. 이들은 결제하기 화면에서 배송지를 새로 등록하거나, SSGPAY에 신규로 가입하거나 카드를 새로 등록해서 사용하는 경우가 많습니다. 따라서 자연스럽게 주문소요시간이 늘어날 수 있습니다. 이런 경우는 결제하기 화면 담당자가 크게 제어할 수 없는 자연 증감분이라고 볼 수 있습니다. (물론,",
		"date": "4/28/2023"
	},
	"9": {
		"preview": "Next.js 에서 메모리 누수 확인/수정하기",
		"logo": "https://static.codenary.co.kr/company-logo/1311.png",
		"info": "재앙의 시작저희 자사 서비스로 마케팅클라우드라는 서비스가 있습니다.처음엔 한 페이지만 존재하던 서비스가 이제는 제법 덩치가 커져 버렸네요.덩치가 커지면서 요구조건도 많아졌는데 그중 하나가 오가닉 마케팅에 대한 니즈였습니다.당시 React만으로 개발되어 마치 SSR이 되는 것처럼 보여주기 위해서앞 단에 Node JS서버를 두고 처리하고 있었는데 요구 사항이 점점 많아지다 보니더 늦기전에 Next.js로 교체하는 게 좋을 것 같다는 생각이 들었습니다.코드의 양이 많아 부담스러운 면이 없지 않아 있었지만, 팀원들과 힘을 합쳐 교체를 단행하게 됩니다!!스스로 불러온 재앙방금 내린 커피가 식지도 않았을 출근 시간... '랜디님... 마클이 접속이 안되네요. ㅠㅠ'띠용! Next.js 교체 버전을 배포한 지 3일 만에 장애가 터지게 됩니다.서버 로그를 보니 도커 인스턴스가 내려가 있고 시스템 메시지를 뒤적여보니 아래와 같은 로그가 보이네요.oom-kill:constraint=CONSTRAINT_NONE,nodemask=(null),cpuset=/,mems_allowed=0,global_oom,task_memcg=/docker/6ca7e178f33371b1760000cf8fdd74bba0b610ca34c8eb4fd53aa4d5c458bb3f,task=node,pid=4463,uid=0 Out of memory: Killed process 4463 (node) total-vm:98285708kB, anon-rss:2107592kB, file-rss:0kB, shmem-rss:0kB, UID:0 pgtables:61588kB oom_score_adj:0OOM Killer께서 Out of memory를 감지하고 프로세스에게 사망선고를 내려버렸습니다.이슈 트래킹옛 추억이 새록새록 나는군요. 후후후......OOM 이슈는 보통 재현 경로가 불분명한 경우가 많으므로 수정하는 게 쉽지는 않습니다.포기를 모르는 집념과 불굴의 의지를 필요로 하는 작업이죠.개발 연차가 높아질수록 Leak 패턴과 거리가 먼 코딩을 하므로사실 잘 발행하지 않...을 줄 알았냐?그런데 그것이 실제로 일어났습니다!?인스턴스에서 OOM이 발생할 때까지 최소 2일의 시간은 있기 때문에일 단위 재시작을 설정하여 응급조치를 해두고 이슈를 파헤치기 시작했습니다.하나만 얻어걸려라쉽게 가보려 했는데 어렵게 가게 생겼군요.Next.js에서 OOM 이슈에 관한 글들을 검색해보니 이런 방법을 제시하는 글들이 많더군요??메모리 한계치 늘리기 OOM Killer 동작 막기이는 미봉책일 뿐이라서 절대 절대 이렇게 하시면 안 됩니다.전체적으로 정보를 모아보니 저희 코드에 대입할 만한 패턴은 보이지 않았습니다.이제 지루한 메모리와의 전쟁을 시작해보도록 하겠습니다.클라이언트 메모리 누수 확인해 보기Next.js 구조상 경우 2가지 방향으로 메모리를 확인해보아야 하는데 첫 번째로 클라이언트 쪽을 살펴보겠습니다.제가 여기서 말하는 클라이언트는 별다른 게 아니라 웹 브라우저입니다.여기서는 크롬 브라우저로 테스트했습니다.사실",
		"date": "4/28/2023"
	},
	"10": {
		"preview": "이벤트 로그 체계 구축 여정",
		"logo": "https://static.codenary.co.kr/company-logo/75.png",
		"info": "안녕하세요. 스포카의 데이터 분석가 양현승(todd)입니다. 😄키친보드 서비스(Android, iOS) 이벤트 로그를 새로 설계하게 된 과정을 공유하려고 합니다.로그 설계의 필요성은 많이 느꼈지만, 경험이 없었기 때문에 어떻게 시작해야할지 막막하고 걱정이 앞섰습니다.또한 이미 조직에 로그 체계가 있었기 때문에, 기존 로그 체계의 데이터를 새로운 체계로 이전하는 과정에서 데이터 무결성 및 기타 이슈들을 고려해야했습니다.돌이켜보면, 동료들과 함께 패기와 열정으로 해낸 것 같습니다.이벤트 로그 체계를 새로 구축하거나, 개편할 계획이 있는 분들에게 도움이 되면 좋겠습니다.예상 독자는 아래와 같습니다.이벤트 로그 설계 경험이 없는 분기존 로그 체계를 바꾸고 싶은 분스포카의 이벤트 로그 체계가 궁금하신 분목차배경스포카는 firebase를 활용하여 로그를 수집하고 있습니다.이벤트 로그 설계 및 관리는 PO, PM분들께서 구글 시트에서 해주셨습니다.기존 설계 문서는 스크린(화면)과 이벤트 로그를 시트로 나눠서 기록하고 있었습니다.스크린 정리 시트는 아래와 같이 크게 3가지가 기록되어 있습니다.스크린별 한글/영문명 (Camel case)구현해야하는 대상 (웹/앱)이벤트 저장 시점이벤트 로그 정리 시트는 아래와 같이 크게 6가지로 구성되어 있습니다.스크린 영문명 (Camel case)action에 대한 설명이벤트명 (snake_case)이벤트 형식이벤트 파라미터 (snake_case)수집 목적기존 로그 체계와 문서는 잘 구축되었지만, 3가지 불편함이 있었습니다.1. 부족한 데이터“ 데이터 분석가님 이거 확인해 줄 수 있나요? ”분석 요청이 들어오면 회사의 데이터 구조가 더 빨리 보입니다.요청 사항을 시행하기 위해 로그 문서를 찾아보면 수집이 안된 경우가 많았습니다.추가적으로 필요한 데이터는 크게 3가지 종류였습니다.이벤트 버튼의 위치 (ex. 상/하단, 버튼 index 등) 서버에 저장된 테이블과 연동할 수 있는 id 값 누락된 이벤트 (ex. scroll, 특정 버튼 등)보통 당장 쓰일 수 있는 데이터만 수집하고, 나머지 데이터는 사용 목적을 모르거나 저장 공간 낭비로 여겨지기 때문에 누락되는 것 같습니다.유저의 모든 행동 데이터를 기록해 두면 이탈이 발생한 지점에서 어떤 행동을 했는지 자세하게 알 수 있습니다.또한 각 스크린별 유저의 행동을 추적하면서, 생각하지 못한 인사이트를 얻을 수도 있습니다.서버 테이블과 연동할 수 있는 id 값이 있다면, 이상 지점에서 발생한 유저들의 행동을 쉽게 확인할 수 있습니다.“ 어떻게 하면 분석을 더 잘 할 수 있는 데이터를 모을 수 있을까요? ”2. 분리된 문서“ xx 화면에서 xx 버튼 클릭하는 로그가 어디있나요? ”특정 기능을 하는 이벤트가 어느 화면에 어떤 부분인지 알기 어려운 경우가 많았습니다.로그 문서와 Figma가 독립적으로 관리되고 있었기 때문입니다.신규 입사자와 같이 서비스에 익숙하지 않거나, Figma와 로그 문서에 익숙하지 않은 경우 헤매기 쉬울 것 같았습니다.또한 잘 쓰지 않는 로그는 시간이 지나",
		"date": "4/28/2023"
	}
}